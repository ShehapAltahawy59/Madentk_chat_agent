name: Deploy to Google Cloud Run (Compose-built)

on:
  push:
    branches: [ main, production ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: madentk-2025
  REGION: me-central1
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  BACKEND_SERVICE_NAME: madentk-agents-api
  STREAMLIT_SERVICE_NAME: madentk-agents-ui

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Prepare image tags
        id: tags
        run: |
          echo "TAG=${GITHUB_SHA}" >> $GITHUB_OUTPUT
          echo "backend_image=${{ env.DOCKER_HUB_USERNAME }}/madentk-agents-backend:${GITHUB_SHA}" >> $GITHUB_OUTPUT
          echo "ui_image=${{ env.DOCKER_HUB_USERNAME }}/madentk-agents-ui:${GITHUB_SHA}" >> $GITHUB_OUTPUT

      - name: Build and push images with Docker Compose
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          TAG: ${{ steps.tags.outputs.TAG }}
          DOCKER_DEFAULT_PLATFORM: linux/amd64
        run: |
          docker compose build --parallel
          docker compose push

      - name: Deploy backend to Cloud Run
        run: |
          gcloud run deploy ${{ env.BACKEND_SERVICE_NAME }} \
            --image=${{ steps.tags.outputs.backend_image }} \
            --region=${{ env.REGION }} \
            --platform=managed \
            --allow-unauthenticated \
            --memory=1Gi \
            --cpu=1 \
            --set-env-vars="GOOGLE_APPLICATION_CREDENTIALS=${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }},OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }},HUGGINGFACE_HUB_TOKEN=${{ secrets.HUGGINGFACE_HUB_TOKEN }}"

      - name: Get backend Service URL
        id: backend-url
        run: |
          URL=$(gcloud run services describe ${{ env.BACKEND_SERVICE_NAME }} \
            --region ${{ env.REGION }} \
            --format 'value(status.url)')
          echo "url=$URL" >> $GITHUB_OUTPUT

      - name: Deploy streamlit to Cloud Run
        run: |
          gcloud run deploy ${{ env.STREAMLIT_SERVICE_NAME }} \
            --image=${{ steps.tags.outputs.ui_image }} \
            --region=${{ env.REGION }} \
            --platform=managed \
            --allow-unauthenticated \
            --memory=512Mi \
            --cpu=1 \
            --set-env-vars="CHAT_API_BASE_URL=${{ steps.backend-url.outputs.url }}"

      - name: Echo service URLs
        run: |
          echo "Backend URL: ${{ steps.backend-url.outputs.url }}"
          UI_URL=$(gcloud run services describe ${{ env.STREAMLIT_SERVICE_NAME }} --region ${{ env.REGION }} --format 'value(status.url)')
          echo "UI URL: ${UI_URL}"

      - name: Test backend health (best-effort)
        run: |
          echo "Waiting for backend to be ready..." && sleep 30
          set +e
          curl -f --max-time 30 "${{ steps.backend-url.outputs.url }}/ping" || \
          curl -f --max-time 30 "${{ steps.backend-url.outputs.url }}/health" || true
          set -e 
